name: PHPUnit test & Static code analysis

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - LICENSE
      - sonar-project.properties

permissions:
  contents: read

jobs:
  build:
    name: php-persistancedoctrine-component (PHP ${{ matrix.php-versions }})

    runs-on: ubuntu-20.04
    
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.0','8.1']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          #tools: phpunit-bridge
          extensions: mbstring intl pdo_mysql bcmath
          coverage: xdebug

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader

      - name: Run all test suites
        run: vendor/bin/phpunit --testsuite=all --coverage-text

      - name: Psalm static code analysis
        run: vendor/bin/psalm
